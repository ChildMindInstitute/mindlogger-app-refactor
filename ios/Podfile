def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

platform :ios, min_ios_version_supported
prepare_react_native_project!

setup_permissions([
  'Camera',
  'LocationWhenInUse',
  'Microphone',
  'PhotoLibrary',
])

# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled(["Debug", "Release"], { 'Flipper' => '0.182.0' })

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

abstract_target 'MindloggerMobileCommonPods' do
  target 'MindloggerMobileDev' do
  end

  target 'MindloggerMobileQA' do
  end

  target 'MindloggerMobileStaging' do
  end

  target 'MindloggerMobileUAT' do
  end

  target 'MindloggerMobile' do
  end

  config = use_native_modules!

  pod 'FirebaseCore', :modular_headers => true
  pod 'FirebaseCoreExtension', :modular_headers => true
  pod 'FirebaseInstallations', :modular_headers => true
  pod 'GoogleDataTransport', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'nanopb', :modular_headers => true

  $RNFirebaseAsStaticFramework = true

  use_react_native!(
    :path => config[:reactNativePath],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => flipper_config,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'MindloggerMobileTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )

    # https://discuss.bitrise.io/t/xcode-16-known-issues/24484#p-45254-issue-with-bitcode-on-testflight-builds-1
    bitcode_strip_path = `xcrun --find bitcode_strip`.chop!
    def strip_bitcode_from_framework(bitcode_strip_path, framework_relative_path)
      framework_path = File.join(Dir.pwd, framework_relative_path)
      command = "#{bitcode_strip_path} #{framework_path} -r -o #{framework_path}"
      puts "Stripping bitcode: #{command}"
      system(command)
    end
    
    framework_paths = [
      "Pods/OpenSSL-Universal/Frameworks/OpenSSL.xcframework/ios-arm64_armv7/OpenSSL.framework/OpenSSL",
      "Pods/Flipper-Glog/Frameworks/glog.xcframework/ios-arm64_armv7/glog.framework/glog",
      "Pods/Flipper-DoubleConversion/Frameworks/double-conversion.xcframework/ios-arm64_armv7/double-conversion.framework/double-conversion"
    ]
  
    framework_paths.each do |framework_relative_path|
      strip_bitcode_from_framework(bitcode_strip_path, framework_relative_path)
    end

    puts '[Local Dev] Removing .xcode.env.local'
    %x(rm -f #{Pod::Config.instance.installation_root}/.xcode.env.local)

    puts '[Local Dev] Patching YogaKit to fix YGMeasureView call signature'
    %x(patch #{Pod::Config.instance.installation_root}/Pods/YogaKit/YogaKit/Source/YGLayout.m -N < #{Pod::Config.instance.installation_root}/patches/YGLayout.patch)

    puts '[Local Dev] Patching Flipper to fix FlipperTransportTypes'
    %x(patch #{Pod::Config.instance.installation_root}/Pods/Flipper/xplat/Flipper/FlipperTransportTypes.h -N < #{Pod::Config.instance.installation_root}/patches/FlipperTransportTypes.patch)
  end
end
