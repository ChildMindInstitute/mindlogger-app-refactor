require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '12.4'

install! 'cocoapods', :deterministic_uuids => false

abstract_target 'MindloggerMobileCommonPods' do
  target 'MindloggerMobileDev' do
  end

  target 'MindloggerMobileQA' do
  end

  target 'MindloggerMobileStaging' do
  end

  target 'MindloggerMobile' do
  end

  # We link a specific versin of react-native-quick-crypto that doesn't have memory leak issues.
  # On Android, we use different version as the latest one doesn't compile correctly because it aims for the latest RN applications.
  pod 'react-native-quick-crypto', :path => '../node_modules/react-native-quick-crypto-ios' 

  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  pod 'FirebaseCore', :modular_headers => true
  pod 'FirebaseCoreExtension', :modular_headers => true
  pod 'FirebaseInstallations', :modular_headers => true
  pod 'GoogleDataTransport', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'nanopb', :modular_headers => true

  $RNFirebaseAsStaticFramework = true

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => true,
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => FlipperConfiguration.enabled(["Debug", "Release"], { 'Flipper' => '0.182.0' }),
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'MindloggerMobileTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    react_native_post_install(
      installer,
      # Set `mac_catalyst_enabled` to `true` in order to apply patches
      # necessary for Mac Catalyst builds
      :mac_catalyst_enabled => false
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.4'
        # @todo get rid when (https://github.com/facebook/react-native/issues/36690) fixed
        # this fixes react-codegen Xcode 14.3 issue
      end
    end
  end
end
